[
    {
        "author": "LinOnetwo",
        "dependents": "$:/plugins/linonetwo/markdown-transformer",
        "description": "Chat with TidGi's build-in language model service in Tiddlywiki. A private, local and rooted ChatGPT AI.",
        "list": "readme config",
        "name": "ChatGPT",
        "plugin-type": "plugin",
        "text": "{\"tiddlers\":{\"$:/plugins/linonetwo/tidgi-language-model/readme/en-GB\":{\"title\":\"$:/plugins/linonetwo/tidgi-language-model/readme/en-GB\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"Using LLaMa in TiddlyWiki.\\n\\nYou will have an additional \\\"TG AI\\\" page in your sidebar, where you can have a conversation directly, and the history of the conversation will be saved. To clear the history, simply delete the entry pointed to by the `history` parameter.\\n\\nLLaMa is actually a widget that allows you to customize the chatbot according to your needs:\\n\\n```html\\n<$tidgi-chat />\\n```\\n\\nVarious optional parameters can also be added to customize the behavior.\\n\\n|!Attributes |!Explanation |\\n|history |Fill in an tiddler title for persistent storage of chat logs |\\n|scroll |If yes, the conversation record can be scrolled up and down, but the height must be specified in the outer layer of the widget, refer to the [[sidebar|$:/plugins/linonetwo/tidgi-language-model/side-bar]] writing |\\n|component |DOM tag type for microware, default is div |\\n|className |Class name of the widget for custom styles |\\n|readonly |If it is readonly, no dialog input box will appear, and it will be used for display only with the history parameter. |\\n|system_message |System messages to customize the AI's behavior, such as \\\"You are an experienced lawyer\\\" |\\n\\nIn addition, the following LLaMa parameters are supported:\\n\\n* nThreads\\n* nTokPredict\\n* repeatPenalty\\n* temp\\n* topK\\n* topP\\n\\nIts specific usage can check the [[official documentation|https://llama-node.vercel.app/docs/backends/llama.cpp/inference]].\\n\\nNow there is no multi-round dialogue, even in a micro-piece chat, but also a single round of dialogue, multi-round dialogue and so on the next version to engage.\\n\\n!! Advance\\n\\nIf you nest your own action in the widget, you can get the result of the answer when the conversation is completed, which requires that you know how to write a widget that supports actions. The output is stored in the `output-text` variable.\\n\\nAt the same time, you can also catch bubbling events of the widget when the conversation completes, as well as global events, both using `addEventListener` and `$tw.hooks.addHook` (the event name is `tidgi-chat`) respectively. The following is the type definition of the event load.\\n\"},\"$:/plugins/linonetwo/tidgi-language-model/readme/zh-Hans\":{\"title\":\"$:/plugins/linonetwo/tidgi-language-model/readme/zh-Hans\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"在 TiddlyWiki 中使用 LLaMa。\\n\\n你的侧边栏会多出一个 TG AI 页面，可以直接进行对话，对话的历史会保存。如要清除历史记录，则直接删除 `history` 参数指向的条目。\\n\\nLLaMa 实际上是一个微件，你可以按照自己的需求定制聊天机器人：\\n\\n```html\\n<$tidgi-chat />\\n```\\n\\n还可以添加各种可选参数来定制行为：\\n\\n|!参数 |!解释 |\\n|history |填写一个条目的标题，用于持久化存储聊天记录 |\\n|component |微件的DOM标签类型，默认为div |\\n|className |微件的类名，用于自定义样式 |\\n|readonly |如果为readonly，则不会出现对话输入框，配合history参数仅做展示用 |\\n|system_message |系统消息，用于AI的行为，例如\\\"你是一个经验丰富的律师\\\" |\\n\\n除此之外，还支持如下 LLaMa 参数：\\n\\n* nThreads\\n* nTokPredict\\n* repeatPenalty\\n* temp\\n* topK\\n* topP\\n\\n其具体用法可以查看[[官方文档|https://llama-node.vercel.app/docs/backends/llama.cpp/inference]]。\\n\\n现在还没有做多轮对话，即便是在一个微件里聊得，也都是单轮对话，多轮对话等下个版本再搞。\\n\\n!! 高级\\n\\n如果在微件中嵌套自己的 action，就可以在对话完成时拿到回答的结果，这需要你知道该如何编写一个支持 action 的微件。输出的结果保存在 `output-text` 变量中。\\n\\n同时，在对话完成时你也可以捕获到微件的冒泡事件，以及全局事件，二者分别使用`addEventListener`和`$tw.hooks.addHook`(事件名称就是`tidgi-chat`)来实现。如下是事件负载的类型定义：\"},\"$:/plugins/linonetwo/tidgi-language-model/readme\":{\"title\":\"$:/plugins/linonetwo/tidgi-language-model/readme\",\"type\":\"text/vnd.tiddlywiki\",\"caption\":\"ChatGPT\",\"text\":\"<$list filter=\\\"[[$:/language]get[text]removeprefix[$:/languages/]else[en-GB]]\\\" variable=\\\"lang\\\">\\n<$list filter=\\\"[<lang>search[zh]]\\\">\\n  {{$:/plugins/linonetwo/tidgi-language-model/readme/zh-Hans}}\\n</$list>\\n\\n<$list filter=\\\"[<lang>!search[zh]]\\\">\\n  {{$:/plugins/linonetwo/tidgi-language-model/readme/en-GB}}\\n</$list>\\n\\n```typescript\\ninterface ChatCompletionEvent {\\n  event: Event;\\n  type: 'tidgi-chat';\\n  name: 'completion-finish';\\n  paramObject: {\\n    id: string;        // Chat id from OpenAI\\n    created: Date;     // Chat time\\n    assistant: string; // Answer of ChatGPT\\n    user: string;      // Your question\\n  };\\n  widget: ChatGPTWidget;\\n  historyTiddler: string;\\n}\\n```\"},\"$:/plugins/linonetwo/tidgi-language-model/side-bar\":{\"title\":\"$:/plugins/linonetwo/tidgi-language-model/side-bar\",\"type\":\"text/vnd.tiddlywiki\",\"tags\":\"$:/tags/SideBar\",\"caption\":\"TG AI\",\"text\":\"<$tidgi-chat history=\\\"$:/state/plugins/linonetwo/tidgi-language-model/side-bar-history\\\" scroll=\\\"yes\\\" temperature=\\\"1\\\" max_tokens=\\\"512\\\" system_message=\\\"You known much on TiddlyWiki. You should answer in wikitext format.\\\" />\\n\"},\"$:/plugins/linonetwo/tidgi-language-model/tidgi-chat-widget.js\":{\"title\":\"$:/plugins/linonetwo/tidgi-language-model/tidgi-chat-widget.js\",\"module-type\":\"widget\",\"type\":\"application/javascript\",\"Modern.TiddlyDev#Origin\":\"tidgi-chat-widget.ts\",\"text\":\"\\\"use strict\\\";var import_widget=require(\\\"$:/core/modules/widgets/widget.js\\\"),isChinese=()=>$tw.wiki.getTiddler(\\\"$:/language\\\").fields.text.includes(\\\"zh\\\"),renderConversation=({id:t,assistant:e,user:i,created:s},r,n,a,o,d)=>{let l;void 0!==o&&(l=$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"edit-button\\\",innerHTML:n,attributes:{title:r?\\\"重新生成问题\\\":\\\"Regenerate question\\\"}})).addEventListener(\\\"click\\\",()=>{o(i)});let c;return void 0!==d&&(c=$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"delete-button\\\",innerHTML:a,attributes:{title:r?\\\"删除问题\\\":\\\"Delete question\\\"}})).addEventListener(\\\"click\\\",()=>{d()}),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation\\\",attributes:{\\\"chatgpt-conversation\\\":t},children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-assistant\\\",innerHTML:$tw.wiki.renderText(\\\"text/html\\\",\\\"text/vnd.tiddlywiki\\\",e)}),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-user\\\",children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"conversation-datetime\\\",text:new Date(s).toLocaleString()}),$tw.utils.domMaker(\\\"p\\\",{text:i}),...void 0===c?[]:[c],...void 0===l?[]:[l]]})]})},renderChatingConversation=(t,e,i,s,r)=>{var n=$tw.utils.domMaker(\\\"pre\\\",{text:t?\\\"思考中...\\\":\\\"Thinking...\\\",style:{background:\\\"transparent\\\",marginTop:\\\"0\\\",marginBottom:\\\"0\\\",padding:\\\"0\\\",border:\\\"none\\\"}});let a,o;void 0!==r&&(o=$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"cancel-button\\\",innerHTML:i,attributes:{title:t?\\\"中止生成\\\":\\\"Cancel generation\\\"}})).addEventListener(\\\"click\\\",()=>{r(a)});return{conversation:a=$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation chatgpt-conversation-chating\\\",children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-assistant\\\",children:[$tw.utils.domMaker(\\\"p\\\",{children:[n]}),...void 0===o?[]:[o]]}),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-user\\\",children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"conversation-datetime\\\",text:(new Date).toLocaleString()}),$tw.utils.domMaker(\\\"p\\\",{text:e})]})]}),answerBox:n,printError:t=>{a.remove(),s.append($tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation chatgpt-conversation-error\\\",children:[$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-user\\\",children:[$tw.utils.domMaker(\\\"p\\\",{text:e})]}),$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chatgpt-conversation-message chatgpt-conversation-assistant\\\",text:t})]}))}}},historyManager=i=>({getHistory:()=>{let t=[];try{t=JSON.parse($tw.wiki.getTiddlerText(i)||\\\"[]\\\")}catch{}return t},setHistory:t=>{var e;$tw.wiki.addTiddler(new $tw.Tiddler(null!=(e=$tw.wiki.getTiddler(i))?e:{},{title:i,text:JSON.stringify(t),type:\\\"application/json\\\"}))}}),ChatGPTWidget=class extends import_widget.widget{constructor(){super(...arguments),this.containerNodeTag=\\\"div\\\",this.containerNodeClass=\\\"\\\",this.tmpHistoryTiddler=\\\"$:/temp/linonetwo/tidgi-language-model/history-\\\"+Date.now(),this.historyTiddler=this.tmpHistoryTiddler,this.chatButtonText=$tw.wiki.renderText(\\\"text/html\\\",\\\"text/vnd.tiddlywiki\\\",$tw.wiki.getTiddlerText(\\\"$:/core/images/add-comment\\\")),this.editButtonText=$tw.wiki.renderText(\\\"text/html\\\",\\\"text/vnd.tiddlywiki\\\",$tw.wiki.getTiddlerText(\\\"$:/core/images/edit-button\\\")),this.deleteButtonText=$tw.wiki.renderText(\\\"text/html\\\",\\\"text/vnd.tiddlywiki\\\",$tw.wiki.getTiddlerText(\\\"$:/core/images/delete-button\\\")),this.cancelButtonText=$tw.wiki.renderText(\\\"text/html\\\",\\\"text/vnd.tiddlywiki\\\",$tw.wiki.getTiddlerText(\\\"$:/core/images/cancel-button\\\")),this.scroll=!1,this.readonly=!1,this.chatGPTOptions={},this.systemMessage=\\\"\\\"}initialise(t,e){super.initialise(t,e),this.computeAttributes()}execute(){this.containerNodeTag=this.getAttribute(\\\"component\\\",\\\"div\\\"),this.containerNodeClass=this.getAttribute(\\\"className\\\",\\\"\\\"),this.historyTiddler=this.getAttribute(\\\"history\\\",\\\"\\\")||this.tmpHistoryTiddler,this.scroll=\\\"yes\\\"===(null==(e=null==(t=this.getAttribute(\\\"scroll\\\"))?void 0:t.toLowerCase)?void 0:e.call(t)),this.readonly=\\\"yes\\\"===(null==(e=null==(t=this.getAttribute(\\\"readonly\\\"))?void 0:t.toLowerCase)?void 0:e.call(t));var t=Number(this.getAttribute(\\\"temperature\\\")),e=Number(this.getAttribute(\\\"top_p\\\")),i=Number.parseInt(this.getAttribute(\\\"max_tokens\\\"),10),s=Number(this.getAttribute(\\\"presence_penalty\\\")),r=Number(this.getAttribute(\\\"frequency_penalty\\\"));this.chatGPTOptions={model:this.getAttribute(\\\"model\\\",\\\"llama\\\"),temperature:0<=t&&t<=2?t:void 0,top_p:0<=e&&e<=1?e:void 0,max_tokens:Number.isSafeInteger(i)&&0<i?i:void 0,presence_penalty:-2<=s&&s<=2?s:void 0,frequency_penalty:-2<=r&&r<=2?r:void 0,user:this.getAttribute(\\\"user\\\")},this.systemMessage=this.getAttribute(\\\"system_message\\\",\\\"A chat between a user and an assistant. You are a helpful assistant.\\\\nUSER:\\\"),this.makeChildWidgets()}render(t,e){var i,s;void 0!==$tw.browser&&void 0!==(null==(i=null==(i=null==window?void 0:window.observables)?void 0:i.languageModel)?void 0:i.runLLama$)&&(this.execute(),i=$tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"conversations\\\"}),s=$tw.utils.domMaker(this.containerNodeTag,{\\\"class\\\":\\\"tidgi-language-model-container \\\"+this.containerNodeClass,children:[i]}),e?e.before(s):t.append(s),this.domNodes.push(s),this.chat(s,i))}refresh(t){var e=this.computeAttributes();return 0<$tw.utils.count(e)||null!=(e=t[this.historyTiddler])&&e.deleted?(this.refreshSelf(),!0):this.refreshChildren(t)}chat(t,g){try{const v=isChinese(),{getHistory:m,setHistory:p}=historyManager(this.historyTiddler);let u;if(!this.readonly){const w=$tw.utils.domMaker(\\\"input\\\",{\\\"class\\\":\\\"chat-input\\\",attributes:{type:\\\"text\\\",placeholder:v?\\\"输入一个问题...\\\":\\\"Ask a question...\\\",autofocus:!0}}),k=(u=t=>w.value=t,$tw.utils.domMaker(\\\"button\\\",{\\\"class\\\":\\\"chat-button\\\",innerHTML:this.chatButtonText,attributes:{title:v?\\\"进行对话\\\":\\\"Chat\\\"}}));t.prepend($tw.utils.domMaker(\\\"div\\\",{\\\"class\\\":\\\"chat-box\\\",children:[w,k]}));let h=!1;const i=o=>{if(!h){const d=w.value.trim();if(d){w.value=\\\"\\\",h=!0,k.disabled=!0;const l=String(Date.now());let n=\\\"\\\",a=0;const e=t=>{var e;const i={id:l,created:a,assistant:n,user:d},s=(p([...m(),i]),t.remove(),renderConversation(i,v,this.editButtonText,this.deleteButtonText,u,()=>{s.remove(),p(m().filter(({id:t})=>t!==i.id))}));g.prepend(s),this.setVariable(\\\"output-text\\\",n);var r={event:o,type:\\\"tidgi-chat\\\",name:\\\"completion-finish\\\",paramObject:{...i,created:new Date(1e3*i.created)},widget:this,historyTiddler:this.historyTiddler};null!=(e=this.invokeAction)&&e.call(this,this,r),this.dispatchEvent(r),$tw.hooks.invokeHook(\\\"tidgi-chat\\\",r),h=!1,k.disabled=!1};const{conversation:i,answerBox:s,printError:r}=renderChatingConversation(v,d,this.cancelButtonText,g,async t=>{await window.service.languageModel.abortLLama(l),h=!1,k.disabled=!1,t.remove()});g.prepend(i);try{const c=t=>{console.error(t),r(String(t)),h=!1,k.disabled=!1};window.observables.languageModel.runLLama$({completionOptions:{prompt:\\\"\\\"+this.systemMessage+d+`\\nASSISTANT:\\n`},id:l}).subscribe({next:t=>{var e;try{if(t.id!==l)return;n=\\\"\\\"+n+(null!=(e=t.token)?e:\\\"\\\"),s.textContent=n+\\\"█\\\",a=Date.now()}catch(i){c(i)}g.scrollTop=g.scrollHeight},error:c,complete:()=>{e(i)}})}catch(t){console.error(t),r(String(t))}}}};k.addEventListener(\\\"click\\\",i),w.addEventListener(\\\"keydown\\\",t=>{\\\"Enter\\\"!==t.code||t.shiftKey||(t.preventDefault(),i(t))})}for(const s of m()){const r=renderConversation(s,v,this.editButtonText,this.deleteButtonText,u,this.readonly?void 0:()=>{r.remove(),p(m().filter(({id:t})=>t!==s.id))});g.append(r)}}catch(e){console.error(e),t.textContent=String(e)}}};exports[\\\"tidgi-chat\\\"]=ChatGPTWidget;\"},\"$:/plugins/linonetwo/tidgi-language-model/tidgi-chat-widget.css\":{\"title\":\"$:/plugins/linonetwo/tidgi-language-model/tidgi-chat-widget.css\",\"tags\":[\"$:/tags/Stylesheet\"],\"type\":\"text/css\",\"Modern.TiddlyDev#Origin\":\"../../temp_stylePlugin:ni:sha-256;Fz3A7WHxGB9nczeL-X4m45PhJJr0XLl45eaoPIgY9XM\",\"text\":\".tidgi-language-model-container{height:100%;width:100%;display:flex;padding:10px 0;flex-direction:column}.tidgi-language-model-container .conversations{width:100%;flex-grow:1;overflow-y:auto}.tidgi-language-model-container .chat-box{width:100%;display:flex;border:1.5px solid #888a;border-radius:5px;background:#8881}.tidgi-language-model-container .chat-input{flex-grow:1;padding-left:10px;font-size:16px}.tidgi-language-model-container .chat-button{height:45px;width:45px;font-size:20px}.tidgi-language-model-container .chatgpt-conversation{display:flex;flex-direction:column}.tidgi-language-model-container .chatgpt-conversation-assistant{background-image:linear-gradient(0deg,#8883,#8883)}.tidgi-language-model-container .chatgpt-conversation-error .chatgpt-conversation-assistant{color:red}.tidgi-language-model-container .chatgpt-conversation-user{font-weight:750;padding-top:18px!important}.tidgi-language-model-container .chatgpt-conversation-message{padding:10px 20px;position:relative}.tidgi-language-model-container .chatgpt-conversation-message .conversation-datetime{position:absolute;left:0;top:0;-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:.5;font-size:12px;font-weight:500px}.tidgi-language-model-container .chatgpt-conversation-message .edit-button{position:absolute;right:0;top:18px}.tidgi-language-model-container .chatgpt-conversation-message .cancel-button{position:absolute;right:0;top:5px}.tidgi-language-model-container .chatgpt-conversation-message .delete-button{position:absolute;right:40px;top:18px}\"}}}",
        "title": "$:/plugins/linonetwo/tidgi-language-model",
        "type": "application/json",
        "version": "0.0.1",
        "Modern.TiddlyDev#SHA256-Hashed": "9ab542285809c283efd4d4333518de25e5ace3f023ef2abe31b037f5592d0328"
    }
]